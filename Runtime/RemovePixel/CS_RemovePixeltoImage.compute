#pragma kernel CSMain

uint width;
uint height;
uint toRemove;

RWStructuredBuffer<uint> pixels;

[numthreads(8, 8, 1)]
void CSMain(uint3 id : SV_DispatchThreadID) {
    uint index = id.y * width + id.x;
    if (index >= width * height) return; 

    // Read the pixel value
    uint color = pixels[index];

    // Extract the alpha channel (assuming format is ARGB, so alpha is in the highest 8 bits)
    uint alpha = (color >> 24) & 0xFF;

    // Adjust the alpha based on `toRemove` value
    if (alpha >= toRemove) {
        alpha -= toRemove;
    } else {
        alpha = 0;
    }

    // Reconstruct the color with updated alpha
    color = (alpha << 24) | (color & 0x00FFFFFF);

    // Write the updated color back to the buffer
    pixels[index] = color;
}
